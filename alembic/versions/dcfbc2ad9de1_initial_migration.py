"""Initial Migration

Revision ID: dcfbc2ad9de1
Revises: 
Create Date: 2025-06-02 16:09:36.690988

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'dcfbc2ad9de1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bank',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Bank name'),
    sa.Column('logo_url', sa.String(length=255), nullable=True, comment='URL to bank logo'),
    sa.Column('website', sa.String(length=255), nullable=True, comment='Bank website URL'),
    sa.Column('status', sa.Integer(), nullable=False, comment='Bank status (active/inactive)'),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bank_id'), 'bank', ['id'], unique=False)
    op.create_index(op.f('ix_bank_name'), 'bank', ['name'], unique=True)
    op.create_index(op.f('ix_bank_status'), 'bank', ['status'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True, comment='Name of the User'),
    sa.Column('guest_id', sa.String(length=255), nullable=True, comment='Guest Id'),
    sa.Column('password', sa.String(length=255), nullable=True, comment='Password'),
    sa.Column('email', sa.String(length=80), nullable=True, comment='Email'),
    sa.Column('status', sa.Integer(), nullable=False, comment='User account status'),
    sa.Column('salt', sa.VARBINARY(length=255).with_variant(postgresql.BYTEA(length=255), 'postgresql'), nullable=True),
    sa.Column('last_login_time', sa.DateTime(timezone=True), nullable=True, comment='Last login time'),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guest_id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_name'), 'user', ['name'], unique=True)
    op.create_index(op.f('ix_user_status'), 'user', ['status'], unique=False)
    op.create_table('card',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('bank_id', sa.Integer(), nullable=False, comment='Reference to bank'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Card name'),
    sa.Column('description', sa.String(length=500), nullable=True, comment='Card description'),
    sa.Column('annual_fee', sa.Integer(), nullable=True, comment='Annual fee in cents'),
    sa.Column('reward_points', sa.Integer(), nullable=True, comment='Sign-up bonus points'),
    sa.Column('interest_rate', sa.Integer(), nullable=True, comment='APR in basis points'),
    sa.Column('min_credit_score', sa.Integer(), nullable=True, comment='Minimum recommended credit score'),
    sa.Column('status', sa.Integer(), nullable=False, comment='Card status (active/inactive)'),
    sa.Column('is_featured', sa.Boolean().with_variant(sa.INTEGER(), 'postgresql'), nullable=False, comment='Featured card flag'),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['bank_id'], ['bank.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_card_bank_id'), 'card', ['bank_id'], unique=False)
    op.create_index(op.f('ix_card_id'), 'card', ['id'], unique=False)
    op.create_index(op.f('ix_card_name'), 'card', ['name'], unique=False)
    op.create_index(op.f('ix_card_status'), 'card', ['status'], unique=False)
    op.create_table('device',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('device_id', sa.String(length=255), nullable=False, comment='Device Id'),
    sa.Column('device_type', sa.Integer(), nullable=False, comment='Device type'),
    sa.Column('notification_token', sa.String(length=255), nullable=False, comment='Notification token'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='Reference to user'),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_device_device_id'), 'device', ['device_id'], unique=True)
    op.create_index(op.f('ix_device_id'), 'device', ['id'], unique=False)
    op.create_index(op.f('ix_device_user_id'), 'device', ['user_id'], unique=False)
    op.create_table('user_cards',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('card_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['card_id'], ['card.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'card_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_cards')
    op.drop_index(op.f('ix_device_user_id'), table_name='device')
    op.drop_index(op.f('ix_device_id'), table_name='device')
    op.drop_index(op.f('ix_device_device_id'), table_name='device')
    op.drop_table('device')
    op.drop_index(op.f('ix_card_status'), table_name='card')
    op.drop_index(op.f('ix_card_name'), table_name='card')
    op.drop_index(op.f('ix_card_id'), table_name='card')
    op.drop_index(op.f('ix_card_bank_id'), table_name='card')
    op.drop_table('card')
    op.drop_index(op.f('ix_user_status'), table_name='user')
    op.drop_index(op.f('ix_user_name'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_bank_status'), table_name='bank')
    op.drop_index(op.f('ix_bank_name'), table_name='bank')
    op.drop_index(op.f('ix_bank_id'), table_name='bank')
    op.drop_table('bank')
    # ### end Alembic commands ###
